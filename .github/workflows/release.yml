name: Create Release
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.0.100
      - name: Build Release
        id: build_release
        run: |
          NEC_VERSION_FILE=${{ github.workspace }}/necromancy.version
          NEC_VERSION=$(<"$NEC_VERSION_FILE")
          echo ::set-env name=NEC_VERSION::$NEC_VERSION
          mkdir ./release
          for NEC_RUNTIME in win-x86 win-x64 linux-x64 osx-x64; do
              # Server
              dotnet publish Necromancy.Cli/Necromancy.Cli.csproj /p:Version=$NEC_VERSION /p:FromMSBuild=true --runtime $NEC_RUNTIME --configuration Release --output ./publish/$NEC_RUNTIME-$NEC_VERSION/Server
              # ReleaseFiles
              cp -r ./ReleaseFiles/. ./publish/$NEC_RUNTIME-$NEC_VERSION/
              # Pack
              tar cjf ./release/$NEC_RUNTIME-$NEC_VERSION.tar.gz ./publish/$NEC_RUNTIME-$NEC_VERSION
          done
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: tag-${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEC_VERSION: ${{ env.NEC_VERSION }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./release/win-x64-${{NEC_VERSION}}.tar.gz
          asset_name: win-x64-.tar.gz
          asset_content_type: application/gzip