using Arrowgene.Services.Buffers;
using Necromancy.Server.Common;
using Necromancy.Server.Model;
using Necromancy.Server.Packet.Id;
using System;

namespace Necromancy.Server.Packet.Area
{
    public class send_chat_post_message : Handler
    {
        
        public send_chat_post_message(NecServer server) : base(server)
        {
            
        }
        
        public override ushort Id => (ushort)AreaPacketId.send_chat_post_message;

        bool ConsoleActive = false;
        
        public override void Handle(NecClient client, NecPacket packet)
        {
            int ChatType = packet.Data.ReadInt32();     // 0 - Area, 1 - Shout, other todo...
            string To = packet.Data.ReadCString();
            string Message = packet.Data.ReadCString();
            



            SendChatNotifyMessage(client, Message, ChatType);

            IBuffer res = BufferProvider.Provide();
            res.WriteInt32(0);
            Router.Send(client, (ushort)AreaPacketId.recv_chat_post_message_r, res);
            Console.WriteLine("Chat Type: " + ChatType + "\nTo: " + To + "\nMessage: " + Message);
        }

        private void SendChatNotifyMessage(NecClient client, string Message, int ChatType)
        {
            if (ConsoleActive == true)
            {
                string[] SplitMessage = Message.Split(':');

                switch (SplitMessage[0])
                {
                    case "NPC":
                        AdminConsoleNPC(client,Convert.ToInt32(SplitMessage[1]));
                        break;
                    case "Item":
                    AdminConsoleSoulMaterial(client);
                    break;
                    case "Died":
                        IBuffer res4 = BufferProvider.Provide();
                        Router.Send(client.Map, (ushort)AreaPacketId.recv_self_lost_notify, res4);
                         break;
                    case "GetLoot":
                        AdminConsoleLootAccessObject(client);
                        break;
                    case "GetMail":
                        AdminConsoleSelectPackageUpdate(client);
                        break;
                        

                    case "Jump":
                        AdminConsoleSuperJump(client, Convert.ToInt32(SplitMessage[1]));
                        break;
                    case "exit":
                        ConsoleActive = false;
                        break;
                    default:
                        Message = $"Unrecognized command '{SplitMessage[0]}' ";
                        break;
                }

                IBuffer res2 = BufferProvider.Provide();
                res2.WriteInt32(ChatType);
                res2.WriteInt32(1);      // todo, maybe, character id
                res2.WriteFixedString($"Console", 49);
                res2.WriteFixedString($"Admin", 37);
                res2.WriteFixedString($"Console Command - {Message} sent", 769);
                Router.Send(client.Map, (ushort)AreaPacketId.recv_chat_notify_message, res2);


            }

            if (ConsoleActive == false)
            {
                IBuffer res = BufferProvider.Provide();
                res.WriteInt32(ChatType);
                res.WriteInt32(1);      // todo, maybe, character id
                res.WriteFixedString($"{client.Soul.Name}", 49);
                res.WriteFixedString($"{client.Character.SoulId}", 37);
                res.WriteFixedString($"{Message}", 769);
                Router.Send(client.Map, (ushort)AreaPacketId.recv_chat_notify_message, res);

                if (Message == "GodModeConsole")
                {
                    ConsoleActive = true;
                    IBuffer res2 = BufferProvider.Provide();
                    res2.WriteInt32(ChatType);
                    res2.WriteInt32(1);      // todo, maybe, character id
                    res2.WriteFixedString($"Admin", 49);
                    res2.WriteFixedString($"Console", 37);
                    res2.WriteFixedString($"Admin Console Activated. Type 'exit' to escape", 769);
                    Router.Send(client.Map, (ushort)AreaPacketId.recv_chat_notify_message, res2);
                }
            }
            


        }

        private void AdminConsoleSuperJump(NecClient client, int Height)
        {
            client.Character.Z += Height;  //It's not that easy.   Teleport to be done later.
        }
        private void AdminConsoleNPC(NecClient client, int ModelID)
        {
                if (ModelID <= 1) { ModelID = 1911105; }

                IBuffer res3 = BufferProvider.Provide();
                res3.WriteInt32(Util.GetRandomNumber(2222222, 22222300));   // NPC ID (object id)

                res3.WriteInt32(10000101);      // NPC Serial ID from "npc.csv"

                res3.WriteByte(0);              // 0 - Clickable NPC (Active NPC, player can select and start dialog), 1 - Not active NPC (Player can't start dialog)

                res3.WriteCString($"Belong Here");//Name

                res3.WriteCString($"I Don't");//Title

                res3.WriteFloat(client.Character.X + Util.GetRandomNumber(25, 150));//X Pos
                res3.WriteFloat(client.Character.Y + Util.GetRandomNumber(25, 150));//Y Pos
                res3.WriteFloat(client.Character.Z);//Z Pos
                res3.WriteByte(client.Character.viewOffset);//view offset

                res3.WriteInt32(19);

                //this is an x19 loop but i broke it up
                res3.WriteInt32(24);
                res3.WriteInt32(1);
                res3.WriteInt32(1);
                res3.WriteInt32(1);
                res3.WriteInt32(1);
                res3.WriteInt32(1);
                res3.WriteInt32(1);
                res3.WriteInt32(1);
                res3.WriteInt32(1);
                res3.WriteInt32(1);
                res3.WriteInt32(1);
                res3.WriteInt32(1);
                res3.WriteInt32(1);
                res3.WriteInt32(1);
                res3.WriteInt32(1);
                res3.WriteInt32(1);
                res3.WriteInt32(1);
                res3.WriteInt32(1);
                res3.WriteInt32(1);

                res3.WriteInt32(19);


                int numEntries = 19;


                for (int i = 0; i<numEntries; i++)

                {
                    // loop start
                    res3.WriteInt32(210901); // this is a loop within a loop i went ahead and broke it up
                    res3.WriteByte(0);
                    res3.WriteByte(0);
                    res3.WriteByte(0);

                    res3.WriteInt32(10310503);
                    res3.WriteByte(0);
                    res3.WriteByte(0);
                    res3.WriteByte(0);

                    res3.WriteByte(0);
                    res3.WriteByte(0);
                    res3.WriteByte(1); // bool
                    res3.WriteByte(0);
                    res3.WriteByte(0);
                    res3.WriteByte(0);
                    res3.WriteByte(0);
                    res3.WriteByte(0);

                }

                res3.WriteInt32(19);

                //this is an x19 loop but i broke it up
                res3.WriteInt32(3);
                res3.WriteInt32(3);
                res3.WriteInt32(3);
                res3.WriteInt32(3);
                res3.WriteInt32(3);
                res3.WriteInt32(3);
                res3.WriteInt32(3);
                res3.WriteInt32(3);
                res3.WriteInt32(3);
                res3.WriteInt32(3);
                res3.WriteInt32(3);
                res3.WriteInt32(3);
                res3.WriteInt32(3);
                res3.WriteInt32(3);
                res3.WriteInt32(3);
                res3.WriteInt32(3);
                res3.WriteInt32(3);
                res3.WriteInt32(3);
                res3.WriteInt32(3);

                res3.WriteInt32(ModelID);   //NPC Model from file "model_common.csv"
                


                res3.WriteInt16(100);       //NPC Model Size

                res3.WriteByte(237);

                res3.WriteByte(237);

                res3.WriteByte(237);

                res3.WriteInt32(237);

                res3.WriteInt32(Util.GetRandomNumber(1, 9)); //npc Emoticon above head 1 for skull

                res3.WriteInt32(237);
                res3.WriteFloat(1000);
                res3.WriteFloat(1000);
                res3.WriteFloat(1000);

                res3.WriteInt32(128);

                int numEntries2 = 128;


                for (int i = 0; i<numEntries2; i++)

                {
                    res3.WriteInt32(237);
                    res3.WriteInt32(237);
                    res3.WriteInt32(237);

                }

            Router.Send(client, (ushort) AreaPacketId.recv_data_notify_npc_data, res3);
            }
        private void AdminConsoleSoulMaterial(NecClient client)
        {
            IBuffer res = BufferProvider.Provide();

            res.WriteInt32(Util.GetRandomNumber(44,48));//Object ID
            res.WriteFloat(client.Character.X);//Initial X
            res.WriteFloat(client.Character.Y);//Initial Y
            res.WriteFloat(client.Character.Z);//Initial Z

            res.WriteFloat(client.Character.X);//Final X
            res.WriteFloat(client.Character.Y);//Final Y
            res.WriteFloat(client.Character.Z);//Final Z
            res.WriteByte(client.Character.viewOffset);//View offset

            res.WriteInt32(0);// 0 here gives an indication (blue pillar thing) and makes it pickup-able
            res.WriteInt32(0);
            res.WriteInt32(0);

            res.WriteInt32(1);//Anim: 1 = fly from the source. (I think it has to do with odd numbers, some cause it to not be pickup-able)

            res.WriteInt32(0);
            
            Router.Send(client.Map, (ushort)AreaPacketId.recv_data_notify_itemobject_data, res);
        }

        private void AdminConsoleLootAccessObject(NecClient client)
        {
            for (int i = 0; i < 1; i++)
            {
                int objectID = itemIDs[i];

                IBuffer res = BufferProvider.Provide();
                res.WriteInt32(0);
                res.WriteInt32(18159);
                res.WriteFixedString("Bite", 0x31);
                res.WriteFixedString("My", 0x5B);
                res.WriteFixedString("Shiny", 0x5B);
                res.WriteFixedString("Metal", 0x259);
                res.WriteInt32(objectID);
                res.WriteInt16(1);
                res.WriteInt64(objectID);
                res.WriteInt32(objectID);
                res.WriteFixedString("Ass", 0x49);
                res.WriteFixedString("Human", 0x49);
                res.WriteInt32(objectID);
                res.WriteInt32(objectID);
                res.WriteInt32(objectID);
                res.WriteInt32(objectID);
                res.WriteFixedString("!", 0x10);
                res.WriteByte(1);
                res.WriteInt32(objectID);
                res.WriteInt32(objectID);
                for (int j = 0; j < 3; j++)
                {
                    res.WriteByte(1);//bool
                    res.WriteInt32(objectID);
                    res.WriteInt32(objectID);
                    res.WriteInt32(objectID);
                }
                res.WriteInt64(objectID);


                Router.Send(client, (ushort)AreaPacketId.recv_package_notify_add, res);
            }



        }

        private void AdminConsoleSelectPackageUpdate(NecClient client)
        {

            for (int i = 0; i < 1000; i++)
            {
                int objectID = itemIDs[i];
                IBuffer res = BufferProvider.Provide();

                res.WriteInt32(i);//Not sure on this,  0 is constant updates, 1 is "you have unopened mail", 2 is "no mail to delete"
                                       //3 is "you have %d unreceived mails. pleas check your inbox.", 4+ is "failed to send mail",

                Router.Send(client, (ushort)AreaPacketId.recv_select_package_update_r, res);
            }
        }

        /////////Int array for testing Item ID's.  
        int[] itemIDs = new int[] {    100101
,   100102
,   100103
,   100104
,   100105
,   100106
,   100107
,   100108
,   100109
,   100110
,   100191
,   100201
,   100202
,   100203
,   100204
,   100205
,   100206
,   100207
,   100208
,   100209
,   100210
,   100214
,   100301
,   100302
,   100303
,   100304
,   100305
,   100306
,   100307
,   100401
,   100402
,   100403
,   100404
,   100405
,   100406
,   100407
,   100501
,   100502
,   100503
,   100504
,   100505
,   100506
,   100507
,   100508
,   100601
,   100801
,   100901
,   101201
,   101301
,   101401
,   101501
,   101601
,   101701
,   101801
,   101901
,   102001
,   102101
,   109901
,   110101
,   110102
,   110103
,   110104
,   110191
,   110301
,   110302
,   110303
,   110304
,   110305
,   110306
,   110307
,   110401
,   110402
,   110403
,   110404
,   110405
,   110406
,   110501
,   110502
,   110503
,   110504
,   110505
,   110506
,   110507
,   110601
,   110602
,   110603
,   110604
,   110605
,   110701
,   111001
,   111101
,   111201
,   111301
,   119001
,   119002
,   119901
,   120101
,   120102
,   120103
,   120104
,   120105
,   120106
,   120107
,   120108
,   120109
,   120110
,   120191
,   120201
,   120202
,   120203
,   120204
,   120205
,   120206
,   120207
,   120301
,   120302
,   120303
,   120304
,   120305
,   120306
,   120401
,   120402
,   120403
,   120404
,   120405
,   120407
,   120501
,   120502
,   120503
,   120504
,   120505
,   120601
,   120602
,   120603
,   120604
,   120605
,   120701
,   120702
,   120703
,   120704
,   120705
,   120751
,   120801
,   120810
,   120901
,   120981
,   120982
,   120983
,   120984
,   120985
,   121001
,   121101
,   121201
,   121301
,   121401
,   121501
,   121601
,   121701
,   121801
,   129901
,   152101
,   152201
,   152301
,   152401
,   152501
,   152601
,   152701
,   152801
,   152901
,   153001
,   160101
,   160102
,   160103
,   160104
,   160105
,   160106
,   160201
,   160202
,   160203
,   160204
,   160205
,   160206
,   160207
,   160208
,   160209
,   160210
,   160281
,   160282
,   160283
,   160701
,   160801
,   160901
,   161001
,   161101
,   161201
,   161301
,   161401
,   170101
,   170201
,   170301
,   170401
,   180101
,   180102
,   180103
,   180104
,   180105
,   180106
,   180107
,   180108
,   180109
,   180110
,   190101
,   200101
,   200102
,   200103
,   200104
,   200105
,   200106
,   200107
,   200109
,   200110
,   200111
,   200112
,   200113
,   200114
,   200191
,   200201
,   200202
,   200203
,   200204
,   200205
,   200206
,   200207
,   200208
,   200209
,   200210
,   200211
,   200212
,   200213
,   200214
,   200301
,   200302
,   200303
,   200304
,   200305
,   200306
,   200307
,   200308
,   200309
,   200401
,   200402
,   200403
,   200404
,   200405
,   200406
,   200407
,   200408
,   200409
,   200410
,   200501
,   200502
,   200503
,   200504
,   200505
,   200506
,   200507
,   200604
,   200801
,   200901
,   201201
,   201301
,   201401
,   201501
,   201601
,   201701
,   201801
,   201901
,   202001
,   202101
,   209901
,   210101
,   210102
,   210103
,   210104
,   210105
,   210106
,   210191
,   210301
,   210302
,   210303
,   210304
,   210305
,   210306
,   210307
,   210401
,   210402
,   210403
,   210404
,   210405
,   210406
,   210407
,   210501
,   210502
,   210503
,   210504
,   210505
,   210506
,   210507
,   210601
,   210602
,   210603
,   210604
,   210605
,   211001
,   211101
,   211201
,   211301
,   219001
,   219002
,   219901
,   220101
,   220102
,   220103
,   220104
,   220105
,   220106
,   220107
,   220191
,   220201
,   220202
,   220203
,   220204
,   220205
,   220206
,   220207
,   220208
,   220301
,   220302
,   220303
,   220304
,   220305
,   220306
,   220307
,   220401
,   220402
,   220403
,   220404
,   220405
,   220406
,   220407
,   220501
,   220502
,   220503
,   220504
,   220505
,   220601
,   220602
,   220603
,   220604
,   220605
,   220701
,   220702
,   220703
,   220704
,   220705
,   220751
,   220810
,   220901
,   221001
,   221101
,   221201
,   221301
,   221401
,   221501
,   221601
,   221701
,   221801
,   229901
,   229902
,   250101
,   250201
,   250301
,   250401
,   250501
,   250601
,   250701
,   250801
,   250901
,   251001
,   252101
,   252201
,   252301
,   252401
,   252501
,   252601
,   252701
,   252801
,   252901
,   253001
,   254101
,   254102
,   254103
,   254104
,   254105
,   254106
,   254107
,   254108
,   254109
,   254110
,   260101
,   260102
,   260103
,   260104
,   260105
,   260106
,   260201
,   260202
,   260203
,   260204
,   260205
,   260206
,   260207
,   260208
,   260209
,   260210
,   260701
,   260801
,   260901
,   261001
,   261101
,   261201
,   261301
,   261401
,   270101
,   270201
,   270301
,   270401
,   280101
,   280102
,   280103
,   280104
,   280105
,   280106
,   280107
,   280108
,   280109
,   280110
,   290101
,   300101
,   300102
,   300103
,   300104
,   300105
,   300106
,   300107
,   300108
,   300109
,   300110
,   300201
,   300202
,   300203
,   300204
,   300205
,   300206
,   300207
,   300208
,   300209
,   300210
,   300211
,   300212
,   300213
,   300214
,   300301
,   300302
,   300303
,   300304
,   300305
,   300306
,   300307
,   300308
,   300309
,   300401
,   300402
,   300403
,   300404
,   300405
,   300406
,   300407
,   300410
,   300501
,   300502
,   300503
,   300504
,   300505
,   300506
,   300507
,   300801
,   300901
,   301201
,   301301
,   301401
,   301501
,   301601
,   301701
,   301801
,   301901
,   302001
,   302101
,   309901
,   310101
,   310102
,   310103
,   310104
,   310105
,   310106
,   310301
,   310302
,   310303
,   310304
,   310305
,   310306
,   310307
,   310401
,   310402
,   310403
,   310404
,   310405
,   310406
,   310407
,   310501
,   310502
,   310503
,   310504
,   310505
,   310506
,   310507
,   310601
,   310602
,   310603
,   310604
,   310605
,   311001
,   311101
,   311201
,   311301
,   319001
,   319002
,   319901
,   320101
,   320102
,   320103
,   320104
,   320105
,   320106
,   320107
,   320201
,   320202
,   320203
,   320204
,   320205
,   320206
,   320301
,   320302
,   320303
,   320304
,   320305
,   320306
,   320307
,   320401
,   320402
,   320403
,   320404
,   320405
,   320407
,   320501
,   320502
,   320503
,   320504
,   320505
,   320601
,   320602
,   320603
,   320604
,   320605
,   320701
,   320702
,   320703
,   320704
,   320705
,   320751
,   320810
,   320901
,   321001
,   321101
,   321201
,   321301
,   321401
,   321501
,   321601
,   321701
,   321801
,   329901
,   350101
,   350201
,   350301
,   350401
,   350501
,   350601
,   350701
,   350801
,   350901
,   351001
,   352101
,   352201
,   352301
,   352401
,   352501
,   352601
,   352701
,   352801
,   352901
,   353001
,   354101
,   354102
,   354103
,   354104
,   354105
,   354106
,   354107
,   354108
,   354109
,   354110
,   360101
,   360102
,   360103
,   360104
,   360105
,   360106
,   360201
,   360202
,   360203
,   360204
,   360205
,   360206
,   360207
,   360208
,   360209
,   360210
,   360701
,   360801
,   360901
,   361001
,   361101
,   361201
,   361301
,   361401
,   370101
,   370201
,   370301
,   370401
,   380101
,   380102
,   380103
,   380104
,   380105
,   380106
,   380107
,   380108
,   380109
,   380110
,   390101
,   400101
,   400102
,   400103
,   400104
,   400105
,   400106
,   400107
,   400108
,   400109
,   400201
,   400202
,   400203
,   400204
,   400205
,   400206
,   400207
,   400208
,   400209
,   400210
,   400211
,   400301
,   400302
,   400303
,   400304
,   400305
,   400306
,   400307
,   400401
,   400402
,   400403
,   400404
,   400405
,   400406
,   400407
,   400501
,   400502
,   400503
,   400504
,   400505
,   400506
,   400507
,   400508
,   400801
,   400901
,   401201
,   401301
,   401401
,   401501
,   401601
,   401701
,   401801
,   401901
,   402001
,   402101
,   409901
,   410101
,   410102
,   410103
,   410104
,   410105
,   410301
,   410302
,   410303
,   410304
,   410305
,   410306
,   410307
,   410401
,   410402
,   410403
,   410404
,   410405
,   410406
,   410407
,   410408
,   410501
,   410502
,   410503
,   410504
,   410505
,   410506
,   410601
,   410602
,   410603
,   410604
,   410605
,   411001
,   411101
,   411201
,   411301
,   419001
,   419002
,   419901
,   420101
,   420102
,   420103
,   420104
,   420105
,   420201
,   420202
,   420203
,   420204
,   420205
,   420301
,   420302
,   420303
,   420304
,   420305
,   420306
,   420307
,   420401
,   420402
,   420403
,   420404
,   420405
,   420406
,   420501
,   420502
,   420503
,   420504
,   420505
,   420601
,   420602
,   420603
,   420604
,   420605
,   420701
,   420702
,   420703
,   420704
,   420705
,   420751
,   420810
,   420901
,   421001
,   421101
,   421201
,   421301
,   421401
,   421501
,   421601
,   421701
,   421801
,   429901
,   450101
,   450201
,   450301
,   450401
,   450501
,   450601
,   450701
,   450801
,   450901
,   451001
,   452101
,   452201
,   452301
,   452401
,   452501
,   452601
,   452701
,   452801
,   452901
,   453001
,   454101
,   454102
,   454103
,   454104
,   454105
,   454106
,   454107
,   454108
,   454109
,   454110
,   460101
,   460102
,   460103
,   460104
,   460105
,   460106
,   460201
,   460202
,   460203
,   460204
,   460205
,   460206
,   460207
,   460208
,   460209
,   460210
,   460211
,   460701
,   460801
,   460901
,   461001
,   461101
,   461201
,   461301
,   461401
,   470101
,   470201
,   470301
,   470401
,   480101
,   480102
,   480103
,   480104
,   480105
,   480106
,   480107
,   480108
,   480109
,   480110
,   490101
,   500101
,   500102
,   500103
,   500104
,   500105
,   500106
,   500107
,   500108
,   500109
,   500201
,   500202
,   500203
,   500204
,   500205
,   500206
,   500207
,   500208
,   500301
,   500302
,   500303
,   500304
,   500305
,   500306
,   500307
,   500401
,   500402
,   500403
,   500404
,   500405
,   500406
,   500501
,   500502
,   500503
,   500504
,   500505
,   500506
,   500507
,   500508
,   500801
,   500901
,   501201
,   501301
,   501401
,   501501
,   501601
,   501701
,   501801
,   501901
,   502001
,   502101
,   509901
,   510101
,   510102
,   510103
,   510104
,   510105
,   510106
,   510107
,   510108
,   510301
,   510302
,   510303
,   510304
,   510305
,   510306
,   510307
,   510401
,   510402
,   510403
,   510404
,   510405
,   510406
,   510501
,   510502
,   510503
,   510504
,   510505
,   510601
,   510602
,   510603
,   510604
,   510605
,   511001
,   511101
,   511201
,   511301
,   519001
,   519002
,   519901
,   520101
,   520102
,   520103
,   520104
,   520105
,   520106
,   520201
,   520202
,   520203
,   520204
,   520205
,   520301
,   520302
,   520303
,   520304
,   520305
,   520306
,   520307
,   520401
,   520402
,   520403
,   520404
,   520405
,   520406
,   520501
,   520502
,   520503
,   520504
,   520505
,   520601
,   520602
,   520603
,   520604
,   520605
,   520701
,   520702
,   520703
,   520704
,   520705
,   520751
,   520810
,   520901
,   521001
,   521101
,   521201
,   521301
,   521401
,   521501
,   521601
,   521701
,   521801
,   529901
,   550101
,   550201
,   550301
,   550401
,   550501
,   550601
,   550701
,   550801
,   550901
,   551001
,   552101
,   552201
,   552301
,   552401
,   552501
,   552601
,   552701
,   552801
,   552901
,   553001
,   554101
,   554102
,   554103
,   554104
,   554105
,   554106
,   554107
,   554108
,   554109
,   554110
,   560101
,   560102
,   560103
,   560104
,   560105
,   560106
,   560201
,   560202
,   560203
,   560204
,   560205
,   560206
,   560207
,   560208
,   560209
,   560210
,   560701
,   560801
,   560901
,   561001
,   561101
,   561201
,   561301
,   561401
,   570101
,   570201
,   570301
,   570401
,   580101
,   580102
,   580103
,   580104
,   580105
,   580106
,   580107
,   580108
,   580109
,   580110
,   590101
,   600101
,   600102
,   600201
,   600301
,   690101
,   690102
,   690103
,   690104
,   690201
,   690202
,   690203
,   690204
,   690301
,   690302
,   690303
,   690304
,   690401
,   690402
,   690403
,   690404
,   690501
,   690502
,   690503
,   690504
,   691101
,   691102
,   691103
,   691104
,   691201
,   691202
,   691203
,   691204
,   691301
,   691302
,   691303
,   691304
,   691401
,   691402
,   691403
,   691404
,   692101
,   692102
,   692103
,   692104
,   692201
,   692202
,   692203
,   692204
,   692301
,   692302
,   692303
,   692304
,   693101
,   693102
,   693103
,   693104
,   693201
,   693202
,   693203
,   693204
,   693212
,   693213
,   693214
,   693215
,   693301
,   693302
,   693303
,   693304
,   693312
,   693401
,   693402
,   693403
,   693404
,   693501
,   693502
,   693503
,   693504
,   694101
,   694102
,   694103
,   694104
,   694201
,   694202
,   694203
,   694204
,   752101
,   752201
,   752301
,   752401
,   752501
,   752601
,   752701
,   752801
,   752901
,   753001
,   10100101
,   10100102
,   10100103
,   10100104
,   10100105
,   10100106
,   10100107
,   10100108
,   10100109
,   10100110
,   10100111
,   10100201
,   10100202
,   10100203
,   10100204
,   10100205
,   10100206
,   10100207
,   10100208
,   10100209
,   10100210
,   10100301
,   10100302
,   10100303
,   10100304
,   10100305
,   10100306
,   10100307
,   10100401
,   10100402
,   10100501
,   10100502
,   10100503
,   10100504
,   10100602
,   10100701
,   10100702
,   10100703
,   10100704
,   10100705
,   10100706
,   10100801
,   10100802
,   10100803
,   10100804
,   10100805
,   10100806
,   10100901
,   10100902
,   10100903
,   10100904
,   10100905
,   10100906
,   10101001
,   10101002
,   10101003
,   10101004
,   10101005
,   10101006
,   10101101
,   10101102
,   10101103
,   10101104
,   10101105
,   10101106
,   10102101
,   10102102
,   10102103
,   10102104
,   10102105
,   10110101
,   10110102
,   10110103
,   10110104
,   10110105
,   10110106
,   10110201
,   10110202
,   10110203
,   10110204
,   10110205
,   10110206
,   10110301
,   10110302
,   10110303
,   10110304
,   10110305
,   10110306
,   10110401
,   10110402
,   10110403
,   10110404
,   10110405
,   10110406
,   10110501
,   10110502
,   10110503
,   10110504
,   10110505
,   10110506
,   10110601
,   10110602
,   10110603
,   10110604
,   10110605
,   10110606
,   10190102
,   10190103
,   10190104
,   10190105
,   10190106
,   10190202
,   10190203
,   10190204
,   10190205
,   10190206
,   10190207
,   10199901
,   10200101
,   10200102
,   10200103
,   10200104
,   10200105
,   10200106
,   10200107
,   10200196
,   10200197
,   10200198
,   10200199
,   10200201
,   10200202
,   10200203
,   10200204
,   10200205
,   10200301
,   10200302
,   10200303
,   10200304
,   10200401
,   10200402
,   10200403
,   10200404
,   10200405
,   10200406
,   10200407
,   10200408
,   10200409
,   10200410
,   10200501
,   10200502
,   10200503
,   10200504
,   10200505
,   10200601
,   10200602
,   10200603
,   10200701
,   10200702
,   10200703
,   10200704
,   10200705
,   10200706
,   10200801
,   10200802
,   10200803
,   10200901
,   10200902
,   10200903
,   10200904
,   10200905
,   10201001
,   10201002
,   10201003
,   10201004
,   10201005
,   10201006
,   10201101
,   10201102
,   10201103
,   10201104
,   10201105
,   10201106
,   10201107
,   10201201
,   10201202
,   10201203
,   10201204
,   10201205
,   10201206
,   10201301
,   10201302
,   10201303
,   10201304
,   10201305
,   10201306
,   10201401
,   10201402
,   10201403
,   10201404
,   10201405
,   10201406
,   10202101
,   10202102
,   10202103
,   10202104
,   10202105
,   10210001
,   10210003
,   10210004
,   10210201
,   10210202
,   10210203
,   10210204
,   10210205
,   10210206
,   10210301
,   10210302
,   10210303
,   10210304
,   10210305
,   10210306
,   10210401
,   10210402
,   10210403
,   10210404
,   10210405
,   10210406
,   10210501
,   10210502
,   10210503
,   10210504
,   10210505
,   10210506
,   10210601
,   10210602
,   10210603
,   10210604
,   10210605
,   10210606
,   10210701
,   10210702
,   10210703
,   10210704
,   10210705
,   10210706
,   10290102
,   10290103
,   10290104
,   10290105
,   10290106
,   10290201
,   10299901
,   10300101
,   10300102
,   10300103
,   10300104
,   10300105
,   10300106
,   10300107
,   10300108
,   10300109
,   10300110
,   10300196
,   10300197
,   10300198
,   10300199
,   10300201
,   10300202
,   10300203
,   10300204
,   10300205
,   10300206
,   10300207
,   10300208
,   10300209
,   10300210
,   10300211
,   10300301
,   10300302
,   10300303
,   10300401
,   10300402
,   10300403
,   10300501
,   10300502
,   10300503
,   10300601
,   10300602
,   10300603
,   10300604
,   10300605
,   10300606
,   10300607
,   10300608
,   10300701
,   10300702
,   10300703
,   10300704
,   10300705
,   10300706
,   10300707
,   10300801
,   10300802
,   10300803
,   10300804
,   10300805
,   10300806
,   10300901
,   10300902
,   10300903
,   10300904
,   10300905
,   10300906
,   10300907
,   10301001
,   10301002
,   10301003
,   10301101
,   10301102
,   10301103
,   10301104
,   10301105
,   10301106
,   10302101
,   10302102
,   10302103
,   10302104
,   10302105
,   10310301
,   10310302
,   10310303
,   10310304
,   10310305
,   10310306
,   10310401
,   10310402
,   10310403
,   10310404
,   10310405
,   10310406
,   10310501
,   10310502
,   10310503
,   10310504
,   10310505
,   10310506
,   10310601
,   10310602
,   10310603
,   10310604
,   10310605
,   10310606
,   10310701
,   10310702
,   10310703
,   10310704
,   10310705
,   10310706
,   10310801
,   10310802
,   10310803
,   10310804
,   10310805
,   10310806
,   10390102
,   10390103
,   10390104
,   10390105
,   10390106
,   10390201
,   10399901
,   10400101
,   10400201
,   10400301
,   10400401
,   10400501
,   10400601
,   10500101
,   10500102
,   10500103
,   10500104
,   10500105
,   10500106
,   10500107
,   10500108
,   10500109
,   10500110
,   10500111
,   10500201
,   10500202
,   10500203
,   10500204
,   10500205
,   10500206
,   10500207
,   10500208
,   10500209
,   10500301
,   10500302
,   10500401
,   10500402
,   10500403
,   10500404
,   10500405
,   10500406
,   10500407
,   10500408
,   10500501
,   10500502
,   10500503
,   10500504
,   10500505
,   10500506
,   10500507
,   10500508
,   10500601
,   10500602
,   10500603
,   10500604
,   10500605
,   10500606
,   10500701
,   10500702
,   10500703
,   10500704
,   10500705
,   10500706
,   10500707
,   10500801
,   10500802
,   10500803
,   10500804
,   10500805
,   10500806
,   10500807
,   10500901
,   10500902
,   10500903
,   10501001
,   10502101
,   10502102
,   10502103
,   10502104
,   10502105
,   10510101
,   10510102
,   10510103
,   10510104
,   10510105
,   10510106
,   10510201
,   10510202
,   10510203
,   10510204
,   10510205
,   10510206
,   10510301
,   10510302
,   10510303
,   10510304
,   10510305
,   10510306
,   10510401
,   10510402
,   10510403
,   10510404
,   10510405
,   10510406
,   10510501
,   10510502
,   10510503
,   10510504
,   10510505
,   10510506
,   10590102
,   10590103
,   10590104
,   10590105
,   10590106
,   10590201
,   10599901
,   10800101
,   10800102
,   10800103
,   10800201
,   10800202
,   10800301
,   10800302
,   10800401
,   10800405
,   10800501
,   10800504
,   10800601
,   10800701
,   10800801
,   10800901
,   10890101
,   10899901
,   10900101
,   10900102
,   10900103
,   10900104
,   10900105
,   10900106
,   10900107
,   10900108
,   10900109
,   10900110
,   10900111
,   10900201
,   10900202
,   10900203
,   10900204
,   10900205
,   10900206
,   10900301
,   10900302
,   10900303
,   10900304
,   10900401
,   10900402
,   10900403
,   10900404
,   10900405
,   10900406
,   10900407
,   10900501
,   10900502
,   10900503
,   10900504
,   10900505
,   10900506
,   10900507
,   10900601
,   10900602
,   10900603
,   10900604
,   10900605
,   10900606
,   10900701
,   10900702
,   10900703
,   10900704
,   10900705
,   10900706
,   10900801
,   10900802
,   10900803
,   10900804
,   10900805
,   10900806
,   10902101
,   10902102
,   10902103
,   10902104
,   10902105
,   10910101
,   10910102
,   10910103
,   10910104
,   10910105
,   10910106
,   10910201
,   10910202
,   10910203
,   10910204
,   10910205
,   10910206
,   10910301
,   10910302
,   10910303
,   10910304
,   10910305
,   10910306
,   10910401
,   10910402
,   10910403
,   10910404
,   10910405
,   10910406
,   10910501
,   10910502
,   10910503
,   10910504
,   10910505
,   10910506
,   10990102
,   10990103
,   10990104
,   10990105
,   10990106
,   10999901
,   11000101
,   11000102
,   11000103
,   11000104
,   11000105
,   11000106
,   11000107
,   11000196
,   11000197
,   11000198
,   11000199
,   11000201
,   11000202
,   11000203
,   11000204
,   11000205
,   11000206
,   11000207
,   11000208
,   11000209
,   11000301
,   11000302
,   11000303
,   11000304
,   11000401
,   11000402
,   11000403
,   11000404
,   11000405
,   11000406
,   11000407
,   11000408
,   11000409
,   11000410
,   11000411
,   11000412
,   11000501
,   11000502
,   11000503
,   11000504
,   11000505
,   11000506
,   11000601
,   11000602
,   11000603
,   11000604
,   11000605
,   11000606
,   11000607
,   11000608
,   11000701
,   11000702
,   11000703
,   11000704
,   11000705
,   11000706
,   11000707
,   11000801
,   11000802
,   11000803
,   11000804
,   11000805
,   11000901
,   11000902
,   11000903
,   11000904
,   11000905
,   11000981
,   11000982
,   11000991
,   11000992
,   11000993
,   11000994
,   11001001
,   11001002
,   11001003
,   11001004
,   11001005
,   11001006
,   11002101
,   11002102
,   11002103
,   11002104
,   11002105
,   11010201
,   11010202
,   11010203
,   11010204
,   11010205
,   11010206
,   11010301
,   11010302
,   11010303
,   11010304
,   11010305
,   11010306
,   11010401
,   11010402
,   11010403
,   11010404
,   11010405
,   11010406
,   11010501
,   11010502
,   11010503
,   11010504
,   11010505
,   11010506
,   11010601
,   11010602
,   11010603
,   11010604
,   11010605
,   11010606
};

    }
}